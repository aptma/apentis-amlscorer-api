openapi: 3.0.3
info:
  title: AMLscorer API
  version: 1.0.0
  description: |
    This API enables external systems — such as CRMs, onboarding tools, or custom platforms — to integrate securely with the Apentis AMLscorer platform.


    ## Authentication

    All endpoints require authentication via a Bearer Token.

    A Bearer Token is a security token that grants access to protected resources. It must be included in the HTTP Authorization header of each API request. The server validates the token to authenticate the client making the request.

    Clients must include the following HTTP header with each API request:

    ```http
    Authorization: Bearer <your_token_here>
    ```

    ### How to obtain a token

    - API tokens are issued manually by Apentis during client onboarding.
    - Each token is associated with an organization and specific access permissions.
    - Tokens are long-lived but can be revoked at any time for security purposes.

    ### Security Best Practices

    - Store the token securely and do not expose it in public repositories or client-side code.
    - Rotate the token periodically if instructed by Apentis.
    - In case of token compromise, contact Apentis support immediately to revoke and regenerate a new token.

    ### Example of using the token in a request

    ```bash
    curl -X GET "https://api.apentis.eu/business-relations" \
         -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    ```

    If the token is missing or invalid, the API will return a `401 Unauthorized` response.
  contact:
    name: Apentis
    email: support@apentis.com
    url: https://www.apentis.com/contact

servers:
  - url: https://aptma.github.io/amlscorer-api
    description: GitHub Pages hosting for AMLscorer API documentation

security:
  - bearerAuth: []

tags:
  - name: Business Relations
    description: Operations related to managing business relations (clients, entities, individuals).
  - name: Documents
    description: Uploading, retrieving, and deleting KYC-related documents for business relations.
  - name: Business Relation Links
    description: Manage roles and relationships between two business relations (e.g., person to company).
  - name: AML/KYC Results
    description: Access to the risk rating, acceptance status, PEP/sanction status, and document completeness of a business relation.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:

    DocumentTypeEnum:
      type: string
      enum:
        - Account valuation
        - Acknowledgement of receipt - To invest with us
        - Advisory mandate contract
        - AML letter
        - Articles of Incorporation
        - Bank account details
        - Bank statement
        - Business continuity plan (BCP / DRP)
        - Certificate of accommodation
        - Certificate of good standing
        - Certificate of incorporation
        - Certificate of incumbency
        - Certificate of insurance
        - Civil partnership certificate
        - Client acceptance doc
        - Client profile
        - Collateral agreement
        - Consumer loan agreement
        - Copy of transaction notices (stocks, bonds,...)
        - Corporate structure
        - Death certificate
        - Declaration of BO
        - Deed
        - Discretionary mandate contract
        - Divorce judgment
        - Driving licence
        - Eligibility assessment
        - Employment certificate
        - Employment contract
        - End of relationship doc
        - File for entering into a business relationship (DER)
        - Family record book
        - FATCA classification
        - Financial statement
        - Financing plan
        - General conditions
        - Health insurance card
        - ID card
        - Investment profile
        - KYC form
        - KYC report
        - Life insurance contract
        - List of authorized signatures
        - Management agreement
        - Marriage certificate
        - MIFID classification
        - MIFID form
        - Mortgage loan agreement
        - Name check
        - Others
        - Passport
        - Pay slip
        - Phone subscription
        - Power of attorney
        - Proof of domicile
        - Source of wealth documentation
        - Deliberation of the last Board of Directors
        - Minutes of the last General Assembly
        - Trade register extract
        - Register of beneficial owners
        - Register of directors
        - Register of shareholders
        - Resident card
        - RTO mandate contract
        - Separation agreement
        - Articles of association of a company
        - Tax notice
        - Tax registration number
        - Termination letter
        - Transaction record (stocks, bonds,...)
        - Tripartite agreement
        - Utility Bill
        - Rapport de visite

    BusinessRelation:
      type: object
      required:
        - type
        - name
        - crmCode
      properties:
        type:
          type: string
          enum: [Association, Company, Family, Foundation, Fund, Household, Insurance company, Insurance contract, Joint ownership, Partnership, Person, Trust]
          description: Type of business relation.
        name:
          type: string
          description: Full name of the person or organization.
        firstName:
          type: string
          description: Required if the type is Person.
        lastName:
          type: string
          description: Required if the type is Person.
        maidenName:
          type: string
          description: Person's maiden name. Optional.
        nationality:
          type: string
          maxLength: 2
          description: ISO 2-letter nationality code. Applicable for persons.
        fiscalCountry:
          type: string
          maxLength: 2
          description: ISO 2-letter fiscal country code.
        countryOfOperation:
          type: string
          maxLength: 2
          description: ISO 2-letter country of operation. Applicable for companies.
        countryOfResidence:
          type: string
          maxLength: 2
          description: ISO 2-letter country of residence. Applicable for persons.
        language:
          type: string
          maxLength: 2
          description: Language code (ISO 639-1) of the business relation.
        birthDate:
          type: string
          format: date
          description: Date of birth of the person (YYYY-MM-DD). Optional.
        phoneNumber:
          type: string
          description: Phone number of the business relation. Optional.
        email:
          type: string
          format: email
          pattern: ^[\w\.-]+@[\w\.-]+\.\w{2,}$
          description: Email address. Optional. Must be a valid email format.
        relationshipStatus:
          type: string
          enum: [Client, Prospect, Contact, Investment]
          default: Client
          description: Business relation type.
        relationStatus:
          type: string
          enum: [active, terminated]
          default: Active
          description: Status of the business relation.
        crmCode:
          type: string
          maxLength: 100
          description: Unique external identifier of the business relation from the calling system.

    DocumentMetadata:
      type: object
      required:
        - documentName
        - documentType
      properties:
        documentName:
          type: string
          maxLength: 200
        documentType:
          $ref: '#/components/schemas/DocumentTypeEnum'
        issuanceDate:
          type: string
          format: date
          description: Date of issuance of the document (YYYY-MM-DD). Optional.
        expirationDate:
          type: string
          format: date
          description: Date of expiration of the document (YYYY-MM-DD). Optional.
        documentNumber:
          type: string
          maxLength: 30          
          description: Document identification number (e.g., passport or ID card number).
        isCertifiedTrueCopy:
          type: boolean
          description: Indicates whether the uploaded document is a certified true copy.
        documentIssuer:
          type: string
          maxLength: 2
          description: ISO 2-letter country code of the country that has issued the document (e.g., 'US', 'FR').

    AmlKycResult:
      type: object
      properties:
        amlRiskRating:
          type: string
          enum: [low, medium, high]
          description: AML risk rating assigned to the business relation.
        relationAcceptanceStatus:
          type: string
          enum: [approved, restricted, rejected]
          description: Final decision on whether the business relation is accepted.
        isPep:
          type: boolean
          description: Whether the business relation is identified as a Politically Exposed Person (PEP).
        isSanctioned:
          type: boolean
          description: Whether the business relation appears on a sanctions list.
        kycStatus:
          type: string
          enum: [to review, reviewed]
          description: KYC review status of the business relation.
        lastKycReviewDate:
          type: string
          format: date
          description: Date of the most recent KYC review (YYYY-MM-DD).
        missingDocuments:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTypeEnum'
          description: List of missing document types.
        expiredDocuments:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTypeEnum'
          description: List of expired document types.

    BusinessRelationLink:
      type: object
      required:
        - primaryCrmCode
        - linkedCrmCode
        - role
      properties:
        primaryCrmCode:
          type: string
          maxLength: 100
          description: The crmCode of the main business relation (e.g., a company).
        linkedCrmCode:
          type: string
          maxLength: 100
          description: The crmCode of the related business relation (e.g., a person).
        role:
          type: string
          enum:
            - Director
            - Board member
            - Trustee
            - Protector
            - Settlor
            - Beneficiary of the trust
            - Key person
            - Corporate director
            - President
            - Treasurer
            - Secretary
            - General partner
            - Limited partner
            - Beneficial owner
            - Member
            - Shareholder
          description: The role of the linked business relation in relation to the main one.

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Short description of the error
        code:
          type: integer
          description: Application-specific or HTTP error code
      example:
        error: "Unauthorized access"
        code: 401

paths:
  /business-relations:
    post:
      summary: Create a new business relation
      tags:
        - Business Relations
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRelation'
            example:
              type: Person
              name: Anna Nowak
              firstName: Anna
              lastName: Nowak
              nationality: PL
              fiscalCountry: PL
              countryOfResidence: PL
              language: en
              birthDate: 1985-09-12
              phoneNumber: '+48 123 456 789'
              email: anna.nowak@example.com
              relationType: Client
              relationStatus: Active
              crmCode: CUST-PL-2024-0001
      responses:
        '201':
          description: Business relation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  crmCode:
                    type: string
                  status:
                    type: string
              example:
                crmCode: "CUST-PL-2024-0001"
                status: "created"
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Bad Request - Invalid input"
                code: 400
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business-relations/{crmCode}:
    put:
      summary: Update an existing business relation
      tags:
        - Business Relations
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: Unique external identifier of the business relation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRelation'
            example:
              phoneNumber: "+352 456 789"
              email: claire.lefebvre@client.eu
      responses:
        '200':
          description: Business relation updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  crmCode:
                    type: string
                  status:
                    type: string
              example:
                crmCode: "EXT123456"
                status: "updated"
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Bad Request - Invalid input"
                code: 400
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Business relation with specified crmCode not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: Retrieve a business relation by crmCode
      tags:
        - Business Relations
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: Unique external identifier of the business relation.
      responses:
        '200':
          description: Business relation retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRelation'
              example:
                type: Person
                name: Anna Nowak
                firstName: Anna
                lastName: Nowak
                nationality: PL
                fiscalCountry: PL
                countryOfResidence: PL
                language: pl
                birthDate: 1985-09-12
                phoneNumber: "+48 123 456 789"
                email: anna.nowak@example.com
                relationType: Client
                relationStatus: Active
                crmCode: CUST-PL-2024-0001          
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Business relation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business-relations/{crmCode}/documents:
    post:
      summary: Upload a document with file and metadata
      tags:
        - Documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: Unique external identifier of the business relation.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - documentMetadata
              properties:
                file:
                  type: string
                  format: binary
                documentMetadata:
                  type: string
                  description: JSON string containing document metadata
            example:
              file: (binary file - e.g. passport.pdf)
              documentMetadata: |
                {
                  "documentName": "Passport - Anna Nowak",
                  "documentType": "Passport",
                  "issuanceDate": "2020-04-10",
                  "expirationDate": "2030-04-10",
                  "documentNumber": "AA4538293",
                  "isCertifiedTrueCopy": true,
                  "documentIssuer": "PL"
                }                  
      responses:
        '201':
          description: Document uploaded successfully
        '400':
          description: Bad Request - Invalid input or file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Bad Request - Invalid input or file"
                code: 400
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Business relation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: Retrieve documents associated with a business relation
      tags:
        - Documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: Unique external identifier of the business relation.
      responses:
        '200':
          description: Documents retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentMetadata'
              example:
                - documentName: "Passport - Anna Nowak"
                  documentType: "Passport"
                  issuanceDate: "2020-04-10"
                  expirationDate: "2030-04-10"
                  documentNumber: "AA4538293"
                  isCertifiedTrueCopy: true
                  documentIssuer: "PL"
                - documentName: "Proof of domicile - Anna Nowak"
                  documentType: "Proof of domicile"
                  issuanceDate: "2024-01-05"
                  expirationDate: "2025-01-05"
                  documentNumber: "DOM-112233"
                  isCertifiedTrueCopy: false
                  documentIssuer: "PL"
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Business relation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    delete:
      summary: Delete documents associated with a business relation
      tags:
        - Documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: Unique external identifier of the business relation.
        - in: query
          name: documentType
          required: false
          schema:
            type: string
          description: If provided, only documents matching this type will be deleted.
      responses:
        '200':
          description: Documents deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  deletedDocumentsCount:
                    type: integer
                    description: Number of documents deleted
                  status:
                    type: string
                    example: "success"
              example:
                deletedDocumentsCount: 2
                status: "success"
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Bad Request - Invalid input"
                code: 400
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Business relation or documents not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /business-relations/{crmCode}/documents/metadata:
    post:
      summary: Submit document metadata without file
      tags:
        - Documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: Unique external identifier of the business relation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentMetadata'
            example:
              documentName: "ID Card - Jean Dupont"
              documentType: "ID card"
              issuanceDate: "2019-05-01"
              expirationDate: "2029-05-01"
              documentNumber: "ID123456789"
              isCertifiedTrueCopy: true
              documentIssuer: "FR"
      responses:
        '201':
          description: Document metadata saved successfully
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Bad Request - Invalid input"
                code: 400
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Business relation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business-relations/{crmCode}/documents/multiple:
    post:
      summary: Upload multiple documents with files and metadata
      tags:
        - Documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: Unique external identifier of the business relation.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - files
                - metadata
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: One or more document files to upload.
                metadata:
                  type: string
                  description: JSON array string containing document metadata objects for each file.
            example:
              files: [ (binary file 1), (binary file 2) ]
              metadata: |
                [
                  {
                    "documentName": "ID Card - Anna Nowak",
                    "documentType": "ID card",
                    "issuanceDate": "2019-05-01",
                    "expirationDate": "2029-05-01",
                    "documentNumber": "ID123456789",
                    "isCertifiedTrueCopy": true,
                    "documentIssuer": "PL"
                  },
                  {
                    "documentName": "Proof of Domicile - Anna Nowak",
                    "documentType": "Proof of domicile",
                    "issuanceDate": "2023-11-01",
                    "expirationDate": "2024-11-01",
                    "documentNumber": "DOM987654321",
                    "isCertifiedTrueCopy": false,
                    "documentIssuer": "PL"
                  }
                ]
      responses:
        '201':
          description: Documents uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  uploadedDocumentsCount:
                    type: integer
                    description: Number of documents uploaded
                  status:
                    type: string
                    example: "success"
              example:
                uploadedDocumentsCount: 3
                status: "success"
        '400':
          description: Bad Request - Invalid input or files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'   
              example:
                error: "Bad Request - Invalid input or files"
                code: 400       
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Business relation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business-relations/{crmCode}/links:
    post:
      summary: Link multiple business relations to a primary one
      tags:
  - name: Business Relation Links
    description: Manage roles and relationships between two business relations (e.g., individual to company).
        - Business Relation Links
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: The primary business relation (e.g., a company).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessRelationLink'
            example:
              - primaryCrmCode: FB001
                linkedCrmCode: MZ001
                role: Director
              - primaryCrmCode: FB001
                linkedCrmCode: SH002
                role: Shareholder
      responses:
        '201':
          description: Links created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  linksCreated:
                    type: array
                    items:
                      $ref: '#/components/schemas/BusinessRelationLink'
                example:
                  status: success
                  linksCreated:
                    - primaryCrmCode: FB001
                      linkedCrmCode: MZ001
                      role: Director
                    - primaryCrmCode: FB001
                      linkedCrmCode: SH002
                      role: Shareholder
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /business-relations/{crmCode}/aml-kyc-result:
    get:
      summary: Retrieve AML/KYC results for a business relation
      tags:
        - AML/KYC Results
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: Unique external identifier of the business relation.
      responses:
        '200':
          description: AML/KYC results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmlKycResult'
              example:
                amlRiskRating: high
                relationAcceptanceStatus: restricted
                isPep: true
                isSanctioned: false
                kycStatus: to review
                lastKycReviewDate: 2024-11-15
                missingDocuments:
                  - Proof of domicile
                  - Source of wealth documentation
                expiredDocuments:
                  - ID card
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Business relation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'