openapi: 3.0.3
info:
  title: Apentis API
  version: 1.1.0
  description: |
    This API enables external systems — such as CRMs, onboarding tools, or custom platforms — to integrate securely with the Apentis platform.

    For full documentation, usage examples and changelogs, please see:
    [README on GitHub](https://github.com/aptma/apentis-amlscorer-api?tab=readme-ov-file#readme)

    ## Authentication

    All endpoints require authentication via a Bearer token. A Bearer token is a security token that grants access to protected resources. It must be included in the HTTP Authorization header of each API request. The server validates the token to authenticate the client making the request.

    Clients must include the following HTTP header with each API request:

    ```http
    Authorization: Bearer <your_token_here>
    ```

    ### How to obtain a token

    - API tokens are issued manually by Apentis during client onboarding.
    - Each token is associated with an organization and specific access permissions.
    - Tokens are long-lived but can be revoked at any time for security purposes.

    ### Security best practices

    - Store the token securely and do not expose it in public repositories or client-side code.
    - Rotate the token periodically if instructed by Apentis.
    - In case of token compromise, contact Apentis support immediately to revoke and regenerate a new token.

    ### Example of using the token in a request

    ```bash
    curl -X GET "https://api.apentis.com/business-relations" \
         -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    ```

    If the token is missing or invalid, the API will return a `401 Unauthorized` response.

  contact:
    name: Apentis
    email: support@apentis.com
    url: https://www.apentis.com/contact

servers:
  - url: https://api.apentis.com
    description: API for Production environment
  - url: https://www.rq-test.com/api
    description: API for Test environment (for sandbox integration)    

security:
  - bearerAuth: []

tags:
  - name: Business relations
    description: Operations related to managing business relations (clients, entities, individuals).
  - name: KYC documents
    description: Uploading, retrieving, and deleting KYC-related documents for business relations.
  - name: Business relation links
    description: Manage roles and relationships between two business relations (e.g., person to company).
  - name: AML/KYC results
    description: Access to the risk rating, acceptance status, PEP/sanction status, and document completeness of a business relation.
  - name: Investor commitments
    description: Endpoints related to investor fund commitments.
  - name: Cash transactions
    description: Endpoints for submitting and monitoring cash movements related to AML processes.
  - name: Portfolio data
    description: Read-only endpoints to check data readiness and retrieve normalized custody **positions** and **transactions** (aggregated across custodians and portfolios).

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    DocumentTypeEnum:
      type: string
      description: Document types. See the "Document types" reference list in GitBook.
      enum:
        - "account_valuation"
        - "Acknowledgement of receipt"
        - "Advisory mandate contract"
        - "aml_letter"
        - "articles_of_incorporation"
        - "Bank account details"
        - "Bank statement"
        - "business_continuity_plan"
        - "Certificate of accommodation"
        - "Certificate of good standing "
        - "certificate of incorporation"
        - "Certificate of incumbency"
        - "Certificate of insurance"
        - "Civil partnership certificate"
        - "Client acceptance doc"
        - "client_profile"
        - "Collateral agreement"
        - "Consumer loan agreement"
        - "Copy of transaction notices"
        - "Corporate structure"
        - "Criminal record"
        - "CRS sefl-certification"
        - "death_certificate"
        - "declaration_of_BO"
        - "deed"
        - "Discretionary mandate contract"
        - "Divorce judgment"
        - "Driving licence"
        - "Eligibility assessment"
        - "Employment certificate"
        - "Employment contract"
        - "End of relationship doc"
        - "Engagement letter"
        - "entering business relationship"
        - "Family record book"
        - "FATCA classification"
        - "Financial statement"
        - "Financing plan"
        - "general_conditions"
        - "Health insurance card"
        - "ID card scan"
        - "investment_profile"
        - "KYC Form"
        - "kyc_report"
        - "Life insurance contract"
        - "list_authorized_signatures"
        - "Management agreement"
        - "Marriage certificate"
        - "Memorandum of association"
        - "MIFID classification"
        - "MIFID form"
        - "Mortgage loan agreement"
        - "name_check"
        - "Others"
        - "Passport"
        - "Pay slip"
        - "Phone subscription"
        - "power_of_attorney"
        - "Proof of domicile"
        - "Proof of origin of capital"
        - "PV board of directors"
        - "PV BoD"
        - "PV general assembly"
        - "RCS"
        - "Register of beneficial owners"
        - "Register of directors"
        - "Register of shareholders"
        - "Resident card"
        - "RTO mandate contract"
        - "Separation agreement"
        - "Status"
        - "Structure chart"
        - "Tax notice"
        - "Tax registration number"
        - "termination_letter"
        - "Trade / Economic license"
        - "Transaction record"
        - "Tripartite agreement"
        - "Unique Identification Number"
        - "utility_bill"
        - "VAT registration certificate"
        - "VISA page"
        - "visit_report"
        - "W-8BEN"
        - "W-9"

    BusinessRelation:
      type: object
      required:
        - type
        - name
        - crmCode
      properties:
        type:
          type: string
          enum: [Association, Company, Family, Foundation, Fund, Household, Insurance company, Insurance contract, Joint ownership, Partnership, Person, Trust]
          description: Type of business relation.
        name:
          type: string
          description: Full name of the person or organization.
        firstName:
          type: string
          description: Required if the type is Person.
        lastName:
          type: string
          description: Required if the type is Person.
        maidenName:
          type: string
          description: Person's maiden name. Optional.
        nationality:
          type: string
          maxLength: 2
          description: ISO 2-letter nationality code. Applicable for persons.
        fiscalCountry:
          type: string
          maxLength: 2
          description: ISO 2-letter fiscal country code.
        countryOfOperation:
          type: string
          maxLength: 2
          description: ISO 2-letter country of operation. Applicable for companies.
        address:
          type: string
          description: Street address of the business relation.
        postalCode:
          type: string
          description: Postal code of the business relation.
        city:
          type: string
          description: City of the business relation.
        countryOfResidence:
          type: string
          maxLength: 2
          description: ISO 2-letter country of residence. 
        language:
          type: string
          maxLength: 2
          description: Language code (ISO 639-1) of the business relation.
        birthDate:
          type: string
          format: date
          description: Date of birth of the person (YYYY-MM-DD). Optional.
        phoneNumber:
          type: string
          description: Phone number of the business relation. Optional.
        email:
          type: string
          format: email
          pattern: ^[\w\.-]+@[\w\.-]+\.\w{2,}$
          description: Email address. Optional. Must be a valid email format.
        relationshipStatus:
          type: string
          enum: [Client, Prospect, Contact, Investment]
          default: Client
          description: Business relation type.
        relationStatus:
          type: string
          enum: [active, terminated]
          default: active
          description: Status of the business relation.
        crmCode:
          type: string
          maxLength: 100
          description: Unique external identifier of the business relation from the calling system.

    InvestorCommitment:
      type: object
      required:
        - fundId
        - commitmentAmount
        - commitmentCurrency
        - commitmentDate
      properties:
        fundId:
          type: string
          maxLength: 100
          description: Unique identifier of the fund
        commitmentAmount:
          type: number
          format: double
          description: Amount committed to the fund
        commitmentCurrency:
          type: string
          pattern: "^[A-Z]{3}$"
          description: ISO 4217 currency code (e.g., EUR, USD)
        commitmentDate:
          type: string
          format: date
          description: Commitment date in YYYY-MM-DD format

    DocumentMetadata:
      type: object
      required:
        - documentName
        - documentType
      properties:
        documentName:
          type: string
          maxLength: 200
        documentType:
          $ref: '#/components/schemas/DocumentTypeEnum'
        issuanceDate:
          type: string
          format: date
          description: Date of issuance of the document (YYYY-MM-DD). Optional.
        expirationDate:
          type: string
          format: date
          description: Date of expiration of the document (YYYY-MM-DD). Optional.
        documentNumber:
          type: string
          maxLength: 30
          description: Document identification number (e.g., passport or ID card number).
        isCertifiedTrueCopy:
          type: boolean
          description: Indicates whether the uploaded document is a certified true copy.
        documentIssuer:
          type: string
          maxLength: 2
          description: ISO 2-letter country code of the country that has issued the document (e.g., 'US', 'FR').

    AmlKycResult:
      type: object
      properties:
        amlRiskRating:
          type: string
          enum: [low, medium, high]
          description: AML risk rating assigned to the business relation.
        relationAcceptanceStatus:
          type: string
          enum: [approved, restricted, rejected]
          description: Final decision on whether the business relation is accepted.
        isPep:
          type: boolean
          description: Whether the business relation is identified as a Politically Exposed Person (PEP).
        isSanctioned:
          type: boolean
          description: Whether the business relation appears on a sanctions list.
        kycStatus:
          type: string
          enum: [to review, reviewed]
          description: KYC review status of the business relation.
        lastKycReviewDate:
          type: string
          format: date
          description: Date of the most recent KYC review (YYYY-MM-DD).
        missingDocuments:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTypeEnum'
          description: List of missing document types.
        expiredDocuments:
          type: array
          items:
            $ref: '#/components/schemas/DocumentTypeEnum'
          description: List of expired document types.

    BusinessRelationLink:
      type: object
      required:
        - linkedCrmCode
        - role
      properties:
        linkedCrmCode:
          type: string
          maxLength: 100
          description: The crmCode of the business relation to link (e.g., a person).
        role:
          type: string
          enum:
            - Director
            - Board member
            - Trustee
            - Protector
            - Settlor
            - Beneficiary of the trust
            - Key person
            - Corporate director
            - President
            - Treasurer
            - Secretary
            - General partner
            - Limited partner
            - Beneficial owner
            - Member
            - Shareholder
          description: The role of the linked business relation in relation to the main one. Please see the README file to see authorized links between entities.

    BusinessRelationLinkDeleteRequest:
        type: array
        items:
          type: object
          required:
            - linkedCrmCode
            - role
          properties:
            linkedCrmCode:
              type: string
              maxLength: 100
              description: The CRM code of the related business relation to unlink.
            role:
              type: string
              enum:
                - Director
                - Board member
                - Trustee
                - Protector
                - Settlor
                - Beneficiary of the trust
                - Key person
                - Corporate director
                - President
                - Treasurer
                - Secretary
                - General partner
                - Limited partner
                - Beneficial owner
                - Member
                - Shareholder
              description: Role to remove from the relationship.

    CashTransaction:
      type: object
      required:
        - crmCode
        - transactionDate
        - portfolioId
        - currency
        - amount
        - transactionType
        - externalTransactionId
      properties:
        crmCode:
          type: string
          maxLength: 100
          description: Business relation executing the transaction
        transactionDate:
          type: string
          format: date
          description: Transaction date in YYYY-MM-DD format
        valueDate:
          type: string
          format: date
          description: Date of value or settlement in YYYY-MM-DD format (optional)          
        portfolioId:
          type: string
          maxLength: 100
          description: Identifier of the account or portfolio
        currency:
          type: string
          pattern: "^[A-Z]{3}$"
          description: ISO 4217 currency code (e.g., EUR, USD)
        amount:
          type: number
          format: double
          description: Net cash amount of the transaction
        transactionType:
          type: string
          enum:
            - dividend
            - coupon
            - interest-payment
            - bond-reimbursement
            - forex
            - cash-transfer
            - fee
            - tax
            - time-deposit
            - loan
            - margin-call
            - capital-call
            - distribution
            - other
          description: Type of transaction
        transactionDirection:
          type: string
          enum: [inflow, outflow]          
        description:
          type: string
          maxLength: 200
          description: Optional free-text description
        externalTransactionId:
          type: string
          maxLength: 100
          description: Unique transaction ID from the external system
        originCountry:
          type: string
          maxLength: 2
          pattern: "^[A-Z]{2}$"
          description: ISO 2-letter country code of the transaction's origin (e.g., FR)
        originIban:
          type: string
          maxLength: 34
          description: IBAN of the originating bank account
        originatorName:
          type: string
          maxLength: 100
          description: Name of the counterparty sending the funds          
        destinationCountry:
          type: string
          maxLength: 2
          pattern: "^[A-Z]{2}$"
          description: ISO 2-letter country code of the transaction's destination (e.g., DE)
        destinationIban:
          type: string
          maxLength: 34
          description: IBAN of the beneficiary bank account
        beneficiaryName:
          type: string
          maxLength: 100
          description: Name of the counterparty receiving the funds
        complianceNote:
          type: string
          maxLength: 200
          description: Optional field from the back office with context or risk flag
        isInternalTransfer:
          type: boolean
          description: Indicates if the cash movement is internal (between client’s own portfolios)
        isSuspicious:
          type: boolean
          description: Optional pre-flag from source system if already suspected          

    CashFlowResult:
      type: object
      properties:
        externalTransactionId:
          type: string
        crmCode:
          type: string
        portfolioId:
          type: string
        transactionDate:
          type: string
          format: date
        analysisResult:
          type: object
          properties:
            status:
              type: string
              enum: [clear, flagged, pending-review]
            riskScore:
              type: integer
              minimum: 0
              maximum: 100
            riskLevel:
              type: string
              enum: [low, medium, high]
            automatedComment:
              type: string
            screeningHits:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  details:
                    type: string
        complianceReview:
          type: object
          properties:
            reviewedBy:
              type: string
            reviewDate:
              type: string
              format: date
            status:
              type: string
              enum: [approved, under_investigation, escalated, dismissed]
            comment:
              type: string

    CustodianAvailability:
      type: object
      required: [custodian_id]
      properties:
        custodian_id:
          type: string
          description: Custodian code (custodian ID code provided by Apentis)
        # Positions readiness (present only if scope includes positions)
        positions_status:
          type: string
          nullable: true
          description: Aggregated status across all portfolios at this custodian
          enum: [complete, partial, loading, failed]
        positions_loaded_at:
          type: string
          format: date-time
          nullable: true
          description: Latest contributing portfolio timestamp (UTC)
        positions_ingestion_runs:
          type: array
          items: { type: string }
          description: Distinct ingestion run IDs that contributed to the status
        # Transactions readiness (present only if scope includes transactions)
        transactions_status:
          type: string
          nullable: true
          enum: [complete, partial, loading, failed]
        transactions_loaded_at:
          type: string
          format: date-time
          nullable: true
        transactions_ingestion_runs:
          type: array
          items: { type: string }
        notes:
          type: string
          nullable: true
          description: Short diagnostic text (present only if include_notes=true)

    AvailabilitySingleDate:
      type: object
      required: [as_of_date, custodians]
      properties:
        as_of_date:
          type: string
          format: date
        custodians:
          type: array
          items: { $ref: "#/components/schemas/CustodianAvailability" }

    SecurityOtherCode:
      type: object
      required: [scheme, value]
      properties:
        scheme: { type: string, description: "Identifier scheme (e.g., ISIN, Bloomberg, CUSIP)" }
        value:  { type: string, description: "Code value in the given scheme" }

    SecurityIndustryEnum:
      type: string
      description: Security industry code (see GitBook reference)
      enum:
        - "-"
        - AC
        - BK
        - CDA
        - CG
        - CPS
        - DF
        - EN
        - FBT
        - FSR
        - HCES
        - HPP
        - HRL
        - IN
        - MA
        - ME
        - PB
        - RE
        - RT
        - SS
        - SSE
        - THE
        - TR
        - TS
        - UT

    SecuritySectorEnum:
      type: string
      description: Security sector code (see GitBook reference)
      enum:
        - "-"
        - CD
        - CS
        - EN
        - FN
        - HC
        - ID
        - IT
        - MA
        - Others
        - RE
        - TE
        - UT

    SecurityAssetClassEnum:
      type: string
      description: Asset class code (see GitBook reference)
      enum:
        - AR
        - CA
        - CC
        - CF
        - CO
        - CV
        - DE
        - EQ
        - FI
        - FRN
        - FX
        - HF
        - MAC
        - MZ
        - NFA
        - OTHER
        - PD
        - PE
        - PP
        - RE
        - RLI
        - SE
        - SP
        - VOL
        - YI

    PositionRecord:
      type: object
      required:
        [ date, portfolio_custodian_id, portfolio_id, portfolio_currency_id,
          is_cash, quantity, market_value_security_ccy, market_value_portfolio_ccy,
          custodian_id, importation_time ]
      properties:
        date: { type: string, format: date, description: "Position date (YYYY-MM-DD)" }
        portfolio_custodian_id: { type: string, description: "Portfolio/account code at custodian" }
        portfolio_id: { type: string, description: "Apentis portfolio id" }
        portfolio_currency_id: { type: string, description: "ISO 4217 code, e.g. EUR" }
        is_cash: { type: boolean, description: "True if the row represents cash" }
        security_other_code:
          type: array
          nullable: true
          description: "Alternative security identifiers"
          items: { $ref: "#/components/schemas/SecurityOtherCode" }
        security_bank_id: { type: string, nullable: true }
        security_id: { type: string, nullable: true, description: "Apentis security id; may be null for cash" }
        security_name: { type: string, nullable: true }
        security_currency_id: { type: string, nullable: true }
        security_multiplier: { type: number, format: double, nullable: true }
        security_sector_id:
          nullable: true 
          $ref: "#/components/schemas/SecuritySectorEnum"
        security_country_id: { type: string, nullable: true, description: "ISO 3166 country code" }
        security_asset_class_id: 
          nullable: true
          $ref: "#/components/schemas/SecurityAssetClassEnum"
        security_industry_id:  
          nullable: true 
          $ref: "#/components/schemas/SecurityIndustryEnum"
        quantity: { type: string, description: "Decimal as string" }
        price_date: { type: string, format: date, nullable: true }
        price: { type: string, nullable: true, description: "Decimal as string; price in security currency" }
        market_value_security_ccy: { type: string, description: "Decimal as string; MV in security currency" }
        market_value_portfolio_ccy: { type: string, description: "Decimal as string; MV in portfolio currency" }
        cost_price: { type: string, nullable: true }
        accrued_interest: { type: string, nullable: true }
        custodian_id: { type: string, description: "Custodian code (custodian ID code provided by Apentis)" }
        importation_time: { type: string, format: date-time, description: "UTC timestamp when imported into Apentis" }

    PositionsResponse:
      type: object
      required: [portfolio_id, as_of_date, positions]
      properties:
        portfolio_id: { type: string }
        as_of_date: { type: string, format: date }
        ingestion_run_id:
          type: string
          nullable: true
          description: "Ingestion run id that produced this snapshot"
        positions:
          type: array
          items: { $ref: "#/components/schemas/PositionRecord" }

    CustodianExclusion:
      type: object
      properties:
        custodian_id: { type: string }
        positions_status:
          type: string
          enum: [complete, partial, loading, failed]

    PositionsCollectionResponse:
      type: object
      required: [as_of_date, positions]
      properties:
        as_of_date: { type: string, format: date }
        included_custodians:
          type: array
          items: { type: string }
          description: Custodians included in this response (ready at the time of request)
        excluded_custodians:
          type: array
          items: { $ref: "#/components/schemas/CustodianExclusion" }
          description: Custodians that were not ready and therefore excluded
        positions:
          type: array
          items: { $ref: "#/components/schemas/PositionRecord" }
        next_cursor:
          type: string
          nullable: true
          description: Opaque cursor for fetching the next page; null if last page

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Short description of the error
        code:
          type: integer
          description: Application-specific or HTTP error code

paths:
  /v1.1/business-relations:
    post:
      summary: Create a new business relation
      tags:
        - Business relations
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRelation'
            example:
              type: Person
              name: Anna Nowak
              firstName: Anna
              lastName: Nowak
              nationality: PL
              fiscalCountry: PL
              address: 12A Nowy Swiat
              postalCode: 80-145
              city: Warsaw
              countryOfResidence: PL
              language: EN
              birthDate: 1985-09-12
              phoneNumber: '+48 123 456 789'
              email: anna.nowak@example.com
              relationshipStatus: Client
              relationStatus: active
              crmCode: CUST-PL-2024-0001
      responses:
        '201':
          description: Business relation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  crmCode:
                    type: string
                  status:
                    type: string
              example:
                crmCode: "CUST-PL-2024-0001"
                status: "created"
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Bad Request - Invalid input"
                code: 400
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Unauthorized - Missing or invalid token"
                code: 401
        '409':
          description: Conflict - Already existing crmCode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Conflict - Already existing crmCode"
                code: 409
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal Server Error"
                code: 500

  /v1.1/business-relations/{crmCode}:
    put:
      summary: Update an existing business relation
      tags:
        - Business relations
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: Unique external identifier of the business relation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRelation'
            example:
              phoneNumber: "+352 456 789"
              email: claire.lefebvre@client.eu
      responses:
        '200':
          description: Business relation updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  crmCode:
                    type: string
                  status:
                    type: string
              example:
                crmCode: "EXT123456"
                status: "updated"
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Bad Request - Invalid input"
                code: 400
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Unauthorized - Missing or invalid token"
                code: 401
        '404':
          description: Not Found - Business relation with specified crmCode not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Not Found - Business relation with specified crmCode not found"
                code: 404
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal Server Error"
                code: 500

    get:
      summary: Retrieve a business relation by crmCode
      tags:
        - Business relations
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: Unique external identifier of the business relation.
      responses:
        '200':
          description: Business relation retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRelation'
              example:
                type: Person
                name: Anna Nowak
                firstName: Anna
                lastName: Nowak
                nationality: PL
                fiscalCountry: PL
                address: 12A Nowy Swiat
                postalCode: 80-145
                city: Warsaw
                countryOfResidence: PL
                language: EN
                birthDate: 1985-09-12
                phoneNumber: "+48 123 456 789"
                email: anna.nowak@example.com
                relationshipStatus: Client
                relationStatus: active
                crmCode: CUST-PL-2024-0001
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Unauthorized - Missing or invalid token"
                code: 401
        '404':
          description: Not Found - Business relation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Not Found - Business relation with specified crmCode not found"
                code: 404
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal Server Error"
                code: 500                

  /v1.1/business-relations/{crmCode}/documents:
    post:
      summary: Upload one or more documents and associated metadata
      tags:
        - KYC documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: Unique external identifier of the business relation.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - files
                - metadata
              properties:
                files:
                  type: array
                  minItems: 1
                  items:
                    type: string
                    format: binary
                  description: |
                    One or more document files to upload (PDF, Word, etc.).

                    Example: [passport.pdf, proof_of_domicile.pdf]
                metadata:
                  type: string
                  description: |
                    JSON string representing an array of document metadata.
                    ⚠️ The number of metadata entries **must exactly match** the number of uploaded files in `files[]`.

                    Example:
                    ```json
                    [
                      {
                        "documentName": "Passport - Anna Nowak",
                        "documentType": "Passport",
                        "issuanceDate": "2019-05-01",
                        "expirationDate": "2029-05-01",
                        "documentNumber": "PA123456789",
                        "isCertifiedTrueCopy": true,
                        "documentIssuer": "PL"
                      },
                      {
                        "documentName": "Proof of Domicile - Anna Nowak",
                        "documentType": "Proof of domicile",
                        "issuanceDate": "2023-11-01",
                        "expirationDate": "2024-11-01",
                        "documentNumber": "DOM987654321",
                        "isCertifiedTrueCopy": false,
                        "documentIssuer": "PL"
                      }
                    ]
                    ```
            encoding:
              metadata:
                contentType: application/json
      responses:
        '201':
          description: Documents uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  uploadedDocumentsCount:
                    type: integer
                  status:
                    type: string
                    example: success
                example:
                  uploadedDocumentsCount: 2
                  status: success
        '400':
          description: Invalid input or metadata count mismatch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Metadata count does not match number of uploaded files"
                code: 400
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Unauthorized - Missing or invalid token"
                code: 401
        '404':
          description: Not Found - Business relation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Not Found - Business relation with specified crmCode not found"
                code: 404
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal Server Error"
                code: 500

    get:
      summary: Retrieve documents associated with a business relation
      tags:
        - KYC documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: Unique external identifier of the business relation.
      responses:
        '200':
          description: Documents retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentMetadata'
              example:
                - documentName: "Passport - Anna Nowak"
                  documentType: "Passport"
                  issuanceDate: "2020-04-10"
                  expirationDate: "2030-04-10"
                  documentNumber: "AA4538293"
                  isCertifiedTrueCopy: true
                  documentIssuer: "PL"
                - documentName: "Proof of domicile - Anna Nowak"
                  documentType: "Proof of domicile"
                  issuanceDate: "2024-01-05"
                  expirationDate: "2025-01-05"
                  documentNumber: "DOM-112233"
                  isCertifiedTrueCopy: false
                  documentIssuer: "PL"
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Unauthorized - Missing or invalid token"
                code: 401
        '404':
          description: Not Found - Business relation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Not Found - Business relation with specified crmCode not found"
                code: 404
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal Server Error"
                code: 500

    delete:
      summary: Delete documents associated with a business relation
      tags:
        - KYC documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: Unique external identifier of the business relation.
        - in: query
          name: documentType
          required: false
          schema:
            type: string
          description: If provided, only documents matching this type will be deleted.
      responses:
        '200':
          description: Documents deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  deletedDocumentsCount:
                    type: integer
                    description: Number of documents deleted
                  status:
                    type: string
                    example: "success"
              example:
                deletedDocumentsCount: 2
                status: "success"
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Bad Request - Invalid input"
                code: 400
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Unauthorized - Missing or invalid token"
                code: 401
        '404':
          description: Not Found - Business relation or documents not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Not Found - Business relation with specified crmCode not found"
                code: 404
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal Server Error"
                code: 500

  /v1.1/business-relations/{crmCode}/documents/metadata-only:
    post:
      summary: Submit document metadata without file
      tags:
        - KYC documents
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: Unique external identifier of the business relation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentMetadata'
            example:
              documentName: "ID Card - Jean Dupont"
              documentType: "ID card scan"
              issuanceDate: "2019-05-01"
              expirationDate: "2029-05-01"
              documentNumber: "ID123456789"
              isCertifiedTrueCopy: true
              documentIssuer: "FR"
      responses:
        '201':
          description: Document metadata saved successfully
        '400':
          description: Bad Request - Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Bad Request - Invalid input"
                code: 400
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Unauthorized - Missing or invalid token"
                code: 401
        '404':
          description: Not Found - Business relation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Not Found - Business relation with specified crmCode not found"
                code: 404
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal Server Error"
                code: 500

  /v1.1/business-relations/{crmCode}/links:
    post:
      summary: Link multiple business relations to a primary one
      tags:
        - Business relation links
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: The primary business relation (e.g., a company).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessRelationLink'
            example:
              - linkedCrmCode: MZ001
                role: Director
              - linkedCrmCode: SH002
                role: Shareholder
      responses:
        '201':
          description: Links created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  linksCreated:
                    type: array
                    items:
                      $ref: '#/components/schemas/BusinessRelationLink'
                example:
                  status: success
                  linksCreated:
                    - linkedCrmCode: MZ001
                      role: Director
                    - linkedCrmCode: SH002
                      role: Shareholder
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Unauthorized - Missing or invalid token"
                code: 401
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal Server Error"
                code: 500

    delete:
      summary: Delete business relation links
      tags:
        - Business relation links
      security:
        - bearerAuth: []
      parameters:
        - name: crmCode
          in: path
          required: true
          schema:
            type: string
          description: The CRM code of the primary business relation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRelationLinkDeleteRequest'
            example:
              - linkedCrmCode: MZ001
                role: Director
              - linkedCrmCode: SH002
                role: Shareholder
      responses:
        '200':
          description: Links deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  deletedLinks:
                    type: array
                    items:
                      type: object
                      properties:
                        linkedCrmCode:
                          type: string
                          example: MZ001
                        role:
                          type: string
                          example: Director
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Unauthorized - Missing or invalid token"
                code: 401
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal Server Error"
                code: 500

  /v1.1/business-relations/{crmCode}/aml-kyc-result:
    get:
      summary: Retrieve AML/KYC results for a business relation
      tags:
        - AML/KYC results
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: Unique external identifier of the business relation.
      responses:
        '200':
          description: AML/KYC results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AmlKycResult'
              example:
                amlRiskRating: high
                relationAcceptanceStatus: restricted
                isPep: true
                isSanctioned: false
                kycStatus: to review
                lastKycReviewDate: 2024-11-15
                missingDocuments:
                  - Proof of domicile
                  - Financial statement
                expiredDocuments:
                  - ID card scan
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Unauthorized - Missing or invalid token"
                code: 401
        '404':
          description: Not Found - Business relation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Not Found - Business relation with specified crmCode not found"
                code: 404
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal Server Error"
                code: 500

  /v1.1/business-relations/{crmCode}/investor-commitments:
    post:
      summary: Register a new fund commitment by an investor
      tags:
        - Investor commitments
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: crmCode
          required: true
          schema:
            type: string
          description: crmCode of the investor (must match an existing business relation)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvestorCommitment'
            example:
              fundId: FUND456
              commitmentAmount: 250000.00
              commitmentCurrency: EUR
              commitmentDate: 2024-12-01
      responses:
        '201':
          description: Commitment successfully recorded
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Commitment registered
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Bad Request - Invalid input"
                code: 400
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Unauthorized - Missing or invalid token"
                code: 401
        '404':
          description: Unknown investor or fund
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Not Found - Business relation with specified crmCode not found"
                code: 404
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'               
              example:
                error: "Internal Server Error"
                code: 500

  /v1.1/cash-transactions:
    post:
      summary: Submit client cash transactions for AML monitoring
      description: Send a cash transaction for automated AML/KYC evaluation.
      tags:
        - Cash transactions
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CashTransaction'
            example:
              - crmCode: BR123
                transactionDate: 2024-12-01
                portfolioId: PF-001
                currency: EUR
                amount: 15000.00
                transactionType: subscription
                description: 15,000€ to subscribe in Ishares World R EUR
                externalTransactionId: EXT-TX-78901
                originCountry: LU
                originIban: LU7630006000011234567890189
                destinationCountry: DE
                destinationIban: DE89370400440532013000
      responses:
        '201':
          description: Transactions accepted for analysis
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  receivedCount:
                    type: integer
                    example: 1
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Bad Request - Invalid input"
                code: 400
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Unauthorized - Missing or invalid token"
                code: 401
        '404':
          description: Unknown business relation 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Not Found - Business relation with specified crmCode not found"
                code: 404
        '409':
          description: Duplicate transaction 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Duplicate - Transaction already exists"
                code: 409                
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'  
              example:
                error: "Internal Server Error"
                code: 500

  /v1.1/cash-transactions/{externalTransactionId}/aml-result:
    get:
      summary: Get AML cahsflow monitoring result for a cash transaction
      tags:
        - Cash transactions      
      parameters:
        - name: externalTransactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: AML result retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashFlowResult'
              examples:
                example:
                  value:
                    externalTransactionId: "TX123456789"
                    crmCode: "BR001234"
                    portfolioId: "P123456"
                    transactionDate: "2025-07-31"
                    analysisResult:
                      status: "flagged"
                      riskScore: 76
                      riskLevel: "high"
                      automatedComment: "Frequent transfers to high-risk country. Transaction inconsistent with client profile."
                      screeningHits:
                        - type: "Country Risk"
                          details: "Destination country is on a sanctions list (IR)."
                        - type: "Transaction Pattern"
                          details: "3 similar transfers within the past 7 days."
                    complianceReview:
                      reviewedBy: "compliance_user1"
                      reviewDate: "2025-08-01"
                      status: "under_investigation"
                      comment: "Requested source of funds justification from advisor."
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Bad Request - Invalid input"
                code: 400
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Unauthorized - Missing or invalid token"
                code: 401
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Transaction not found"
                code: 404

  /v1.1/cash-transactions/aml-results:
    get:
      summary: List AML results for a business relation or portfolio
      tags:
        - Cash transactions         
      parameters:
        - name: crmCode
          in: query
          required: false
          schema:
            type: string
        - name: portfolioId
          in: query
          required: false
          schema:
            type: string
        - name: fromDate
          in: query
          schema:
            type: string
            format: date
        - name: toDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of AML results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CashFlowResult'
              examples:
                example:
                  value:
                    - externalTransactionId: "TX123456789"
                      crmCode: "BR001234"
                      portfolioId: "P123456"
                      transactionDate: "2025-07-31"
                      analysisResult:
                        status: "flagged"
                        riskScore: 76
                        riskLevel: "high"
                        automatedComment: "Frequent transfers to high-risk country."
                        screeningHits:
                          - type: "Country Risk"
                            details: "Destination: Afghanistan (high terror risk)."
                      complianceReview:
                        reviewedBy: "officerA"
                        reviewDate: "2025-08-01"
                        status: "under_investigation"
                        comment: "Pending external justification."

                    - externalTransactionId: "TX654321000"
                      crmCode: "BR001234"
                      portfolioId: "P123456"
                      transactionDate: "2025-07-30"
                      analysisResult:
                        status: "clear"
                        riskScore: 12
                        riskLevel: "low"
                        automatedComment: "Low-value deposit, origin country: LU."
                        screeningHits: []
                      complianceReview: null
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Bad Request - Invalid input"
                code: 400
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Unauthorized - Missing or invalid token"
                code: 401

  /v1.1/data/availability:
    get:
      summary: Custodian availability for positions and/or transactions
      tags:
        - Portfolio data       
      description: |
        Returns readiness (per custodian) for a given date.
        Aggregates across all portfolios under each custodian.
      operationId: getDataAvailability
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: as_of_date
          required: true
          description: Snapshot date (YYYY-MM-DD)
          schema: { type: string, format: date }
        - in: query
          name: custodian_id
          required: false
          description: Filter to a single custodian (internal code provided by Apentis)
          schema: { type: string }
        - in: query
          name: scope
          required: false
          description: What readiness to return
          schema:
            type: string
            enum: [positions, transactions, both]
            default: both
        - in: query
          name: include_notes
          required: false
          description: Include short diagnostic notes
          schema: { type: boolean, default: false }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvailabilitySingleDate"
              examples:
                positionsOnly:
                  summary: scope=positions
                  value:
                    as_of_date: "2025-09-01"
                    custodians:
                      - custodian_id: BDL_LU
                        positions_status: complete
                        positions_loaded_at: "2025-09-01T05:42:11Z"
                        positions_ingestion_runs: ["15788"]
                transactionsOnly:
                  summary: scope=transactions
                  value:
                    as_of_date: "2025-09-01"
                    custodians:
                      - custodian_id: BDL_LU
                        transactions_status: loading
                        transactions_loaded_at: "2025-09-01T05:44:33Z"
                        transactions_ingestion_runs: ["15789"]
                bothDefault:
                  summary: scope=both (default)
                  value:
                    as_of_date: "2025-09-01"
                    custodians:
                      - custodian_id: BDL_LU
                        positions_status: complete
                        positions_loaded_at: "2025-09-01T05:42:11Z"
                        positions_ingestion_runs: ["15900"]
                        transactions_status: complete
                        transactions_loaded_at: "2025-09-01T05:44:33Z"
                        transactions_ingestion_runs: ["15901"]
        "400":
          description: Bad Request
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
              example:
                error: "Bad Request (missing/invalid parameters)"
                code: 400
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Unauthorized - Missing or invalid token"
                code: 401
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
              example:
                error: "Unprocessable entity (invalid custodian_id or scope)"
                code: 422              
        "429":
          description: Too many requests
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
              example:
                error: "Too many requests"
                code: 429           
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
              example:
                error: "Internal Server Error"
                code: 500 

  /v1.1/data/positions:
    get:
      tags: [Portfolio data]
      summary: Positions snapshot by date
      description: |
        Returns custody positions (cash + securities) for all portfolios as of a given date.
        If no custodian_id is provided, includes positions from all *ready* custodians and omits not-ready ones.
        If a custodian_id is provided and that custodian is not ready, returns 409 Conflict.
      operationId: listPositions
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: as_of_date
          required: true
          description: Snapshot date (YYYY-MM-DD)
          schema: { type: string, format: date }
        - in: query
          name: custodian_id
          required: false
          description: Filter to a single custodian. If provided and not ready -> 409.
          schema: { type: string }
        - in: query
          name: portfolio_id
          required: false
          description: Optional filter to one portfolio (or multiple via repeated param).
          schema: { type: string }
          style: form
          explode: true
        - in: query
          name: type
          required: false
          description: Filter by position type
          schema:
            type: string
            enum: [all, security, cash]
            default: all
        - in: query
          name: page_size
          required: false
          description: Number of records per page (max 5000)
          schema: { type: integer, minimum: 1, maximum: 5000, default: 1000 }
        - in: query
          name: cursor
          required: false
          description: Opaque pagination cursor returned by the previous page
          schema: { type: string }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PositionsCollectionResponse"
              examples:
                allReadyCustodians:
                  summary: No custodian filter → includes all ready custodians
                  value:
                    as_of_date: "2025-09-01"
                    included_custodians: ["BIL LU","EFG MC"]
                    excluded_custodians:
                      - { custodian_id: "BDL LU", positions_status: "failed" }
                    positions:
                      - { date: "2025-09-01", portfolio_custodian_id: "ACCT-1", portfolio_id: "PF-001", portfolio_currency_id: "EUR", is_cash: true, security_other_code: [], security_bank_id: null, security_id: null, security_name: "CASH EUR", security_currency_id: "EUR", security_multiplier: 1.0, security_sector_id: null, security_country_id: null, security_asset_class_id: "CA", security_industry_id: "-", quantity: "25000.5500", price_date: "2025-09-01", price: "1.0000", market_value_security_ccy: "25000.55", market_value_portfolio_ccy: "25000.55", cost_price: null, accrued_interest: null, custodian_id: "BIL LU", importation_time: "2025-09-01T05:42:11Z" }
                    next_cursor: "eyJvZmZzZXQiOiJCTFVYTFVMTCIsInBvcyI6IjAwMDAwMDAxIn0="
        "409":
          description: Conflict — requested custodian not ready
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
              examples:
                notReadyCustodian:
                  value:
                    error: data_not_ready
                    message: "Positions not ready for custodian BIL LU on 2025-09-01."
                    details:
                      as_of_date: "2025-09-01"
                      custodian_id: "BIL LU"
                      positions_status: "partial"
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
              example:
                error: "Unprocessable entity (invalid parameters)"
                code: 422              
        "429":
          description: Too many requests
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
              example:
                error: "Too many requests"
                code: 429           
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
              example:
                error: "Internal Server Error"
                code: 500 


  /v1.1/data/portfolios/{portfolio_id}/positions:
    get:
      tags: [Portfolio data]
      summary: Positions snapshot by portfolio and date
      description: |
        Returns custody positions (cash + securities) for a portfolio as of a given date.
        Records are normalized across custodians. Data is served only when ready.
        If the requested custodian (or any custodian when none is specified) is not ready,
        the server returns 409 Conflict with details.
      operationId: getPortfolioPositions
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: portfolio_id
          required: true
          description: Apentis canonical portfolio identifier
          schema: { type: string, minLength: 1 }
        - in: query
          name: as_of_date
          required: true
          description: Snapshot date (YYYY-MM-DD)
          schema: { type: string, format: date }
        - in: query
          name: custodian_id
          required: false
          description: Filter to a single custodian. If omitted, all custodians must be ready.
          schema: { type: string }
        - in: query
          name: type
          required: false
          description: Filter by position type
          schema:
            type: string
            enum: [all, security, cash]
            default: all
        - in: query
          name: page_size
          required: false
          description: Number of records per page (max 5000)
          schema: { type: integer, minimum: 1, maximum: 5000, default: 1000 }
        - in: query
          name: cursor
          required: false
          description: Opaque pagination cursor returned by the previous page
          schema: { type: string }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PositionsResponse"
              examples:
                firstPage:
                  summary: First page with next_cursor
                  value:
                    portfolio_id: PF-001
                    as_of_date: "2025-09-01"
                    ingestion_run_id: 15899
                    positions:
                      - date: "2025-09-01"
                        portfolio_custodian_id: ACCT-12345
                        portfolio_id: PF-001
                        portfolio_currency_id: EUR
                        is_cash: false
                        security_other_code:
                          - { scheme: ISIN, value: CH0024608827 }
                          - { scheme: Bloomberg, value: "PGHN SE Equity" }
                        security_bank_id: BANK_SEC_789
                        security_id: APNT_SEC_456
                        security_name: "Partners Group Holding AG"
                        security_currency_id: CHF
                        security_multiplier: 1.0
                        security_sector_id: INDUSTRIALS
                        security_country_id: CH
                        security_asset_class_id: Equity
                        security_industry_id: "Capital Markets"
                        quantity: "1200.0000"
                        price_date: "2025-09-01"
                        price: "1040.5000"
                        market_value_security_ccy: "1248600.00"
                        market_value_portfolio_ccy: "1293000.25"
                        cost_price: "980.0000"
                        accrued_interest: null
                        custodian_id: BLUXLULL
                        importation_time: "2025-09-01T05:42:11Z"
                    next_cursor: "eyJvZmZzZXQiOiJCTFVYTFVMTCIsInBvcyI6IjAwMDAwMDAxIn0="
                lastPage:
                  summary: Last page (no next_cursor)
                  value:
                    portfolio_id: PF-001
                    as_of_date: "2025-09-01"
                    ingestion_run_id: 15899
                    positions: []
                    next_cursor: null
        "404":
          description: Portfolio not found 
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
              example:
                error: "Portfolio BILL_GATES_PTF not found"
                code: 422                 
        "409":
          description: Conflict — data not ready for the requested scope
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
              examples:
                notReadySingleCustodian:
                  summary: Requested custodian not ready
                  value:
                    error: data_not_ready
                    message: "Positions not ready for custodian BIL_LU on 2025-09-01."
                    details:
                      portfolio_id: PF-001
                      as_of_date: "2025-09-01"
                      custodians:
                        - custodian_id: BIL_LU
                          positions_status: loading
                          positions_loaded_at: "2025-09-01T05:12:00Z"
                notReadyAnyCustodian:
                  summary: At least one custodian not ready when no filter is provided
                  value:
                    error: data_not_ready
                    message: "Positions not ready for all custodians on 2025-09-01."
                    details:
                      portfolio_id: PF-001
                      as_of_date: "2025-09-01"
                      not_ready:
                        - { custodian_id: BDL_LU, positions_status: partial, positions_loaded_at: "2025-09-01T05:11:03Z" }
        "422":
          description: Unprocessable entity
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
              example:
                error: "Unprocessable entity (invalid parameters)"
                code: 422              
        "429":
          description: Too many requests
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
              example:
                error: "Too many requests"
                code: 429           
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema: { $ref: "#/components/schemas/ErrorResponse" }
              example:
                error: "Internal Server Error"
                code: 500 

                